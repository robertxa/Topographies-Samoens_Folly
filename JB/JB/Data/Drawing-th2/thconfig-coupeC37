encoding  utf-8

# Copyright (C) 2010 Xavier Robert <xavier.robert01@gmail.com>
# This work is under the GPLv2

# INTRO

# le signe "#" en début de ligne signifie que la ligne est commentee. Elle ne
# sera donc pas lue lors de la compilation. 

# Dans ce fichier on met les specifications generales, à savoir
# dans quel fichier sont les donnees topo, l'aspect que l'on veut
# donner aux topos imprimees (layout) et ce que l'on 
# veut comme resultat : map, ou atlas ou 3D
# ou donnees en format SQL

# Alors, on peut fractioner ce fichier en trois parts:
# - source, pour specifier les fichiers ou sont les donnees topo/dessin
# - layout, pour specifier la composition du document a imprimer
# - export: map, atlas, etc


# 1-SOURCES 
# La ligne source specifie le fichier ou sont les donnees topo
# jb.th" 

# (Au fichier "jb.th" il faudra avoir une ligne 
# "input "nomducavite.th2" pour specifier le fichier ou se trouvent
# les donnees du dessin, comme ça, ce fichier thconfig appellera 
# "jb.th" et a leur tour, "jb.th" appellera
# "jb-dessin.th2")

 source jb-coupe.th

  
 # 2-LAYOUT
# Ici, on peut specifier des choses comme les symboles
# a utiliser (UIS, etc) ou imprimer des explications des
# symboles

# Debut de la definition du Layout "xviexport"
layout xviexport
  # echele auquel on veut faire la topo
  scale 1 1000
  # taille de la grille
  grid-size 10 10 10 m
  # mettre la grille en arrière plan
  grid bottom
endlayout
# fin de la définition du layout "xviexport"


#debut de la definition du layout "my_layout"
layout my_layout

 cs UTM32
  
  # La ligne base-scale specifie l'echelle auquel nous avons
  # dessine nos croquis. Par defaut, therion pense que c'est
  # une echelle 1:200. Si on a utilise une autre echelle, 
  # il faudrait enlever le "#" et especifier l'echelle vraiment 
  # employee, comme c'est le cas apres avoir dessine la topo
  # sur un cheminement exporte avec le layout "xviexport"
  # (voir en bas)
  base-scale 1 1000

  # Maitenant on va mettre une ligne "scale" pour specifier l'echelle
  # pour imprimer la topo. La combination entre scale et base-scale
  # controlle le gros des lignes, rotation, etc, convenable
  # pour faire l'ampliation-reduction entre dessin et
  # le resultat de l'imprimante

  # C'est tres important s'assurer que la configuration de
  # l'imprimante ne specifie pas l'option "Fit in page"
  # ou similaire, sinon, l'echelle sera change pendant
  # l'impression! 
  scale 1 1000

  # Voici une ligne pour specifier qu'il faut imprimer une grille
  # au dessous de la topo
#  grid bottom

  # Une ligne pour specifier que la grille est 1000x1000x1000 metres
  # (Trois dimensions, oui, ça sert pour la coupe aussi)
#  grid-size 1000 1000 1000 m  
  grid off
 
  # La symbologie: UIS, ASF (Australie) CCNP (Etats Units) ou
  # SKB (txekoslovakia) 
  #symbol-set UIS
  symbol-assign point station:temporary SKBB 
  
  # une couleur de fond, 85% blanc = 15% noir
  #color map-bg 90
#  color map-bg 85
   color map-fg [100 100 80]  
  
  # la topo est transparente (on peut voir les galeries sousjacentes)
  # C'est on par defaut, donc, pas vraiment besoin de specifier
  transparency on

  # ça marche seulement si transparency est "on" 90% blanc= 10% noir
  opacity 75
  
  # Pour faire une rotation
  #rotate 2.25
  
  # Auteur 
  doc-author "Xavier Robert"

  # Titule
  doc-title "Gouffre Jean-Bernard - 1:1000"

  # Maitenant on va specifier la position de la manchette, dont l'interieur
  # sera ocuppe par le titule, auteurs, etc. Nous pouvons indiquer
  # les cordonnes du point de la topo ou l'on veut la manchette:
  # 0 0, c'est en bas, a gauche
  # 100 100, c'est en haut, a droite
  # La manchette a des "points cardinaux" autour: n, s, ne, sw, etc.
  # Il faut specifier un de ces points comme ce que sera place sur les
  # cordonnees.
  # Alors nous pouvons specifier que le sud-ouest de la manchette
  # soit place en bas, a gauche, ou une autre combination
#  map-header 0 100 nw
  # map-header 5 50 e
#  map-header 0 0 s

  # arrière plan de la manchette
  map-header-bg off
  
  # Nous voulons une legende pour expliquer les symboles. "on" imprimera
  # seulement la legende des symboles dessines sur la topo, si l'on veut
  # pour tous les symboles, utilises ou pas, il faut indiquer "all".
  # "legend off" = pas de legende
  legend on

  # Par defaut, la legende est de 14 cm de largeur
#  legend-width 14 cm

  # Il faut s'exprimer avec la langue de Voltaire...
  language fr

  # echelle graphique 100 m ampleur
  scale-bar 100 m

  # Un commentaire a ajounter au titule, on pourrait indiquer ici
  # la mairie ou est place la cavite dont le nom est probablement
  # le titule de la topo.
  map-comment "Gouffre Jean-Bernard, Samoëns, 74, France"
#  map-comment "Synthèse 2010, Coupe développée"

  # "size", c'est pour l'atlas. Ce sont las dimensions du carre dont
  # l'interiur sera ocuppe par la partie de la topo correspondant a
  # chaque une des pagines. 15 x 20, ça va bien pour imprimer A4.
#  size 15 20 cm

  # Dans l'atlas, on va superposer 1cm de chaque page voisine
  overlap 1 cm

  # "page-setup", ca sert pour le map et pour l'atlas aussi.
  # on specifie les dimensions de la feuille papier: 21 X 29,7 (A4)
  # la surface imprimible du papier, ce sont 17 X 28,2
  # Alors, on peut indiquer un marge a gauche de 3 (21-17-1=3)
  # et un marge en haut de 1,5 (29,7-27,2-1=1,5)
  # en centimetres  
  #page-setup 21 29.7 17 27.2 3 1.5 cm  
 
  # Afficher les statistiques d'explo par équipe/nom. C'est lourd
  # si la cavité est importante et qu'il y a beaucoup d'explorateurs
  statistics explo-length off

  # Afficher le developpement et la profondeur de la cavite
  statistics topo-length off
  
  # Modifier l'aspect et les données des statistiques de longueur affichees
  #code tex-map
  #     \cavelength{21460\thinspace{}m} 
  #+ 150\thinspace{}m estimés}
  #     \cavedepth{-1602\thinspace{}m}
  #   endcode  
  
  # Afficher un copyright
  statistics copyright all
  
  # Dessin ou pas du cheminement topo
#  symbol-hide point station        
  symbol-hide line survey
  
  symbol-color point water-flow [0 0 100]
  symbol-color line water-flow [0 0 100]
  
 # origin 12 22 0 m
 # origin-label 100 K

  layers on

#  debug station-names

# Taille des blocs : Modifier la taille des blocs en fonction de la taille de la topo
code metapost
  def a_blocks (expr p) =
    T:=identity;
    pickup PenC;
    path q, qq; q = bbox p;
    picture tmp_pic; 
    uu := max(u, (xpart urcorner q - xpart llcorner q)/100, (ypart urcorner q - ypart     llcorner q)/100);
    tmp_pic := image(
      for i = xpart llcorner q step 1.0uu until xpart urcorner q:
        for j = ypart llcorner q step 1.0uu until ypart urcorner q:
          qq := punked (((-.3uu,-.3uu)--(.3uu,-.3uu)--(.3uu,.3uu)--(-.3uu,.3uu)--cycle) 
         randomized (uu/2))
               rotated uniformdeviate(360) 
               shifted ((i,j) randomized 1.0uu);
    if xpart (p intersectiontimes qq) < 0:
      thclean qq;
      thdraw qq;
    fi;
        endfor;  
      endfor;
    );
    clip tmp_pic to p;
    draw tmp_pic;
  enddef;

#sable
def a_sands (expr p) =
    T:=identity;
    pickup PenC;
    path q; q = bbox p;
    picture tmp_pic;
    tmp_pic := image(
      for i = xpart llcorner q step 0.1u until xpart urcorner q:
        for j = ypart llcorner q step 0.1u until ypart urcorner q:
          draw origin shifted ((i,j) randomized 0.1u) withpen PenC;
        endfor;
      endfor;
    );
    #clip tmp_pic to p;
    draw tmp_pic;
  enddef;

#pebbles
def a_pebbles_SKBB (expr p) =
  T:=identity;
  pickup PenC;
  path q, qq; q = bbox p;
  picture tmp_pic; 
  tmp_pic := image(
    for i = xpart llcorner q step .1u until xpart urcorner q:
      for j = ypart llcorner q step .5u until ypart urcorner q:
        qq := (superellipse((.07u,0),(0,.03u),(-.07u,0),(0,.-.03u),.75))
%             randomized (u/25)
             rotated uniformdeviate(360) 
             shifted ((i,j) randomized 0.27u);
	if xpart (p intersectiontimes qq) < 0:
	  thdraw qq;
	fi;
      endfor;  
    endfor;
  );
  clip tmp_pic to p;
  draw tmp_pic;
enddef;

#pente
   def l_slope (expr P,S)(text Q) = 
 %show Q;
T:=identity;
numeric dirs[];
numeric lengths[];
for i=Q:
  dirs[redpart i]:=greenpart i;
  lengths[redpart i]:=bluepart i;
endfor;  
li:=length(P); % last
alw_perpendicular:=true;
for i=0 upto li:
  if unknown dirs[i]: dirs[i]:=-1; 
  else: 
    if dirs[i]>-1:
      dirs[i]:=((90-dirs[i]) - angle(thdir(P,i))) mod 360; 
      alw_perpendicular:=false;
    fi;
  fi;
  if unknown lengths[i]: lengths[i]:=-1; fi;
endfor;
  %for i=0 upto li: show dirs[i]; endfor;
ni:=0; % next
pi:=0; % previous
for i=0 upto li:
  d:=dirs[i];
  if d=-1:
    if (i=0) or (i=li):
      dirs[i] := angle(thdir(P,i) rotated 90) mod 360;
pi:=i;
    else:
      if ni<=i:
  for j=i upto li:
          ni:=j;
    exitif dirs[j]>-1;
  endfor;
fi;
w:=arclength(subpath(pi,i) of P) / 
   arclength(subpath(pi,ni) of P);
dirs[i]:=w[dirs[pi],dirs[ni]];
   %        if (dirs[i]-angle(thdir(P,i))) mod 360>180:
   %          dirs[i]:=w[dirs[ni],dirs[pi]];
   %	  message("*******");
   %        fi;
   fi;
  else:
    pi:=i;
  fi;
endfor;
  %for i=0 upto li: show dirs[i]; endfor;
ni:=0; % next
pi:=0; % previous
for i=0 upto li:
  l:=lengths[i];
  if l=-1:
    if (i=0) or (i=li):
      lengths[i] := 1cm; % should never happen!
thwarning("slope width at the end point not specified");
pi:=i;
    else:
      if ni<=i:
  for j=i+1 upto li:
          ni:=j;
    exitif lengths[j]>-1;
  endfor;  
fi;
w:=arclength(subpath(pi,i) of P) /   
   arclength(subpath(pi,ni) of P);
lengths[i]:=w[lengths[pi],lengths[ni]];
pi:=i;
    fi;
  else:
    pi:=i;
  fi;
endfor;
  % for i=0 upto li: show lengths[i]; endfor;
T:=identity;
boolean par;
cas := 0.3u;
krok := 0.7u;
dlzka := (arclength P);
if dlzka>3u: dlzka:=dlzka-0.6u fi;
mojkrok:=adjust_step(dlzka,1.4u) / 5;
pickup PenD;
par := false; 
forever:
  t := arctime cas of P;
  if t mod 1>0:  % not a key point
    w := (arclength(subpath(floor t,t) of P) / 
          arclength(subpath(floor t,ceiling t) of P));
    if alw_perpendicular:
      a := 90;
    else:
      a := w[dirs[floor t],dirs[ceiling t]];
    fi;
    l := w[lengths[floor t],lengths[ceiling t]];
  else:
    if alw_perpendicular:
      a := 90;
    else:
      a:= dirs[t];
    fi; 
    l:=lengths[t];
  fi;    
  a := a + angle(thdir(P,t));    
  thdraw (point t of P) -- 
    ((point t of P) + if par: 0.333 * fi l * unitvector(dir(a)));
  cas := cas + mojkrok;
  par := not par;
  exitif cas > dlzka + .3u + (krok / 3);  % for rounding errors
endfor;
if S = 1: pickup PenC; draw P fi;
   %pickup pencircle scaled 3pt;
   %for i=0 upto li: draw point i of P; endfor;
  enddef; 
  
# Sump
    def a_sump (expr p) =
      T:=identity;
      thfill p withcolor (0.0, 0.0, 0.3);
    enddef;

# Water    
    def a_water (expr p) =
      T:=identity;
      thfill p withcolor (0.0, 0.0, 1.0);
    enddef;

# Northarrow 
   def s_northarrow (expr rot) =
    begingroup
      interim defaultscale:=0.7; % scale your north arrow here
      T:=identity scaled defaultscale rotated -rot;
      interim linecap:=squared;
        interim linejoin:=rounded;
      thfill (-.5cm,-.1cm)--(0,2.5cm)--(.5cm,-.1cm)--cycle;
      pickup pencircle scaled (0.08cm * defaultscale);
      thdraw (0,0)--(0,-2.5cm);
      pickup pencircle scaled (0.16cm * defaultscale);
      p:=(0.4cm,0.6cm);
      thdraw ((p--(p yscaled -1)--(p xscaled -1)--(p scaled -1)) shifted (0,-1.0cm));
      label.rt(thTEX("mg") scaled 1.6, (.6cm,-1.6cm)) transformed T;
    endgroup;
  enddef;   
    
# Echelle    
def s_scalebar (expr l, units, txt) =
    begingroup
      interim warningcheck:=0;
      tmpl:=l / Scale * cm * units / 2;
      tmpx:=l / Scale * cm * units / 5;
      tmph:=5bp; % bar height
    endgroup;
    pickup PenC;
    draw (-tmpl,0)--(tmpl,0)--(tmpl,-tmph)--(-tmpl,-tmph)--cycle;
    p:=(0,0)--(tmpx,0)--(tmpx,-tmph)--(0,-tmph)--cycle;
    for i:=-2.5 step 2 until 2:
      fill p shifted (i * tmpx,0);
    endfor;
    begingroup
      interim labeloffset:=3.5bp;
      for i:=0 step (l/5) until (l-1):
        tmpx:=tmpl * (i * 2 / l - 1);
        label.bot(thTEX(decimal (i)),(tmpx,-tmph));
      endfor;
      label.bot(thTEX(decimal (l) & "\thinspace" & txt),(tmpl,-tmph));
      label.top(thTEX("Echelle 1 : " & decimal (Scale*100)),(0,0));
    endgroup;
  enddef;    

## Couleur des fleches d'eau
#def p_water-flow (expr p) =
#    pickup PenC;
#    draw p withcolor (0.1, 0.2, 0.8);
#  enddef;
       
                
# Titre                         
    code tex-map
   % Output map title as determined by Therion 5.3 is stored in cavename. 
   % It will be empty if there are multiple maps selected for any one projection
   % AND there are multiple source surveys identified in the thconfig file 
   % ie Therion can not infer a unique title from the input data given.
   % This code allows you to define an output map title {cavename} if it happens to be empty
   
  \edef\temp{\the\cavename}        % cavename from Therion   
  \edef\nostring{}                 % empty string 
  \ifx\temp\nostring             % test if cavename is empty
        % if empty reassign cavename to describe selected maps as a group

		\cavename={Gouffre Jean-Bernard} 
		
  \else % if not empty keep the value set by therion, or assign an override cavename here
  \fi
  endcode   
 
 code metapost
  def p_altitude (expr pos) =
    T:=identity shifted pos;
    pickup PenD;
    p:=(-.3u,0)--(.3u,0);
    thdraw p; thdraw p rotated 90;
    p:=fullcircle scaled .2u;
    thclean p; thdraw p;
  enddef;
  
  vardef p_label@#(expr txt,pos,rot,mode) =
    if mode=1:
      thdrawoptions(withcolor .8red + .4blue);
      p_altitude(pos);
      % append "m" to label
      picture txtm;
      txtm:=image(
        draw txt;
        interim labeloffset:=0;
        label.urt(btex \thaltitude m etex, lrcorner txt);
      );
      % give extra offset in case of l/r/t/b alignment
      pair ctmp;
      ctmp:=center thelabel@#("x", (0,0));
      if (xpart ctmp * ypart ctmp)=0:
        interim labeloffset:=(.4u);
      else: % diagonal alignment
        interim labeloffset:=(.2u);
      fi;
      % draw label
      lab:=thelabel@#(txtm, pos);
      draw lab _thop_; % use color
      thdrawoptions();
      bboxmargin:=0.8bp;
      write_circ_bbox((bbox lab) smoothed 2);
    else:
      if mode=7: interim labeloffset:=(u/8) fi;
      lab:=thelabel@#(txt, pos);
      if mode>1: pickup PenD fi;
      if mode=2: process_uplabel;
      elseif mode=3: process_downlabel;
      elseif mode=4: process_updownlabel;
      elseif mode=5: process_circledlabel;
      elseif mode=6: process_boxedlabel;
      elseif mode=7: process_label(pos,rot);  % station name
      elseif mode=8: process_filledlabel(pos, rot);
      else: process_label(pos,rot); fi;
    fi;
  enddef;
endcode  
  
# For point height with P or C prefixe 
# use “point 0 0 height -value [+10 m]” 
# or “point 0 0 height -value [-85 m]” 
# in your data to get E10 or P85
code mpost
    verbatimtex \def\thheightpos{E}\def\thheightneg{P} etex 
 
 
## Pour changer la longeur et la profondeur   
# code tex-map
#      \topoteam{G.S. Vulcain}
#      \cavelength{1000\thinspace{}ft}
#      \cavedepth{-1602\thinspace{}m}
#  endcode                                                 

## Pour modifier le Header
#code tex-map  
#    \cavename={Gouffre Jean-Bernard}
#    \topotitle={Topographié par G.S Vulcain}
#    \cartotitle={Dessiné par Xavier Robert}
#    \explotitle={Exploré par G.S. Vulcain}  
  endcode

# Pour mettre 2 headers     
# code tex-map
#    \def\maplayout{
#      \legendbox{0}{100}{NW}{\northarrow\scalebar}
#      \legendbox{100}{100}{NW}{\scalebar}
#    }
    
      
# Pour dessiner un cadre autour de la topo   
code tex-map
  \framethickness=0.5mm
endcode
  
 endlayout
# Fin de la definition du Layout "normal"



# 3-EXPORT
# Voici les lignes pour exporter le cheminement au format xvi
#export map -proj extended -fmt xvi -layout xviexport -o synthese_coupe.xvi
export map -proj extended -fmt xvi -layout xviexport -o coupe-C37-2.xvi
#export map -proj extended -fmt xvi -layout xviexport -o coupe-riv2.xvi

# Export des fichiers pdf, plan et coupe. 
#  select JB-total@jb.th -map-level 0
#  select JB-rev@jb -map-level 0
# ATTENTION, la topo étant énorme, il faut mettre l'option ne traçant pas la centerline !
# export map -projection plan -fmt pdf -o jb-Xav-2010-plan.pdf -layout my_layout
 export map -projection extended -fmt pdf -layout my_layout -o jb-C37-2015-coupe.pdf
